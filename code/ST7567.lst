C51 COMPILER V9.00   ST7567                                                                11/04/2021 23:39:15 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE ST7567
OBJECT MODULE PLACED IN ST7567.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE st7567\ST7567.c BROWSE INCDIR(.\st7567) DEBUG OBJECTEXTEND PRINT(.\ST7567.l
                    -st) OBJECT(ST7567.obj)

line level    source

   1          /*****************************************
   2          Ä£¿éÃû³Æ£ºST7567Çý¶¯
   3          ×÷Õß£ºSocialSisterYi
   4          ÖÆ×÷Ê±¼ä£º2017.2
   5          ËµÃ÷£ºST7567£¨¼æÈÝST7565¡¢UC1701µÈµÈ¡£¡£¡££©Îªµ¥É«STN¿ØÖÆÆ÷£¬½Ó¿Ú£ºSPI/8-bit²¢¿Ú£¬·Ö±æÂÊ132*64+1ICON,È¡Ä£·
             -½Ê½£º8Î»ÊúÖÃºáÅÅÏÂ¸ßÎ»
   6          ±¸×¢£º
   7          *****************************************/
   8          #include <STC15F2K60S2.h>
   9          #include <intrins.h>
  10          #include "delay.h"
  11          #include "ST7567.h"
  12          #if (LCD_INTERFACE==LCD_INTERFACE_SPI_HW)
              #include "SPIHW.h"
              #endif
  15          
  16          bit lcd_seg_reverse=  LCD_SEG_REVERSE,
  17              lcd_com_reverse=  LCD_COM_REVERSE,
  18                  lcd_black_reverse=LCD_BLACK_REVERSE;
  19          unsigned char lcd_contrast=LCD_CONTRAST;
  20          
  21          /*********************************
  22          º¯ÊýÃû³Æ£ºLcd_write_byte
  23          ¹¦ÄÜ£ºLCDÍ¨¹ýÈí¼þSPI·¢ËÍÒ»¸ö×Ö½Ú
  24          ÊäÈë£ºÐ´ÈëÄÚÈÝ
  25          Êä³ö£ºÎÞ
  26          ±¸×¢£ºÈí¼þ´®¿Ú
  27          *********************************/
  28          #if (LCD_INTERFACE==LCD_INTERFACE_SPI_SW)
  29          void Lcd_write_byte(unsigned char Byte)
  30          {
  31   1              unsigned char i;
  32   1              for(i=0;i<8;i++)
  33   1              {
  34   2                      LCD_CLK=0;
  35   2                      LCD_DAT=(Byte&0x80);
  36   2                      Byte<<=1;
  37   2                      LCD_CLK=1;
  38   2              }
  39   1      }
  40          #endif
  41          
  42          /*********************************
  43          º¯ÊýÃû³Æ£ºLcd_write_cmd
  44          ¹¦ÄÜ£ºLCDÐ´Ö¸Áî
  45          ÊäÈë£ºÐ´ÈëÖ¸Áî
  46          Êä³ö£ºÎÞ
  47          ±¸×¢£º
  48          *********************************/
  49          void Lcd_write_cmd(unsigned char cmd)
  50          {
  51   1              EA=0;
  52   1              LCD_CS=0;
  53   1              LCD_RS=0;
C51 COMPILER V9.00   ST7567                                                                11/04/2021 23:39:15 PAGE 2   

  54   1      #if (LCD_INTERFACE==LCD_INTERFACE_6800PARALLEL)
              //      LCD_RW=0;
                      LCD_DATA=cmd;
                      LCD_E=0;
                      _nop_();
                      LCD_E=1;
              #elif (LCD_INTERFACE==LCD_INTERFACE_8080PARALLEL)
              //      LCD_RD=1;
                      LCD_DATA=cmd;
                      LCD_WR=0;
                      _nop_();
                      LCD_WR=1;
              #elif (LCD_INTERFACE==LCD_INTERFACE_SPI_SW)
  67   1              Lcd_write_byte(cmd);
  68   1      #elif (LCD_INTERFACE==LCD_INTERFACE_SPI_HW)
                      SPIHW_Write(cmd);
              #endif
  71   1              LCD_CS=1;
  72   1              EA=1;
  73   1      }
  74          
  75          /*********************************
  76          º¯ÊýÃû³Æ£ºLcd_write_dat
  77          ¹¦ÄÜ£ºLCDÐ´Êý¾Ý
  78          ÊäÈë£ºÐ´ÈëÊý¾Ý
  79          Êä³ö£ºÎÞ
  80          ±¸×¢£º
  81          *********************************/
  82          void Lcd_write_dat(unsigned char dat)
  83          {
  84   1              EA=0;
  85   1              LCD_CS=0;
  86   1              LCD_RS=1;
  87   1      #if (LCD_INTERFACE==LCD_INTERFACE_6800PARALLEL)
              //      LCD_RW=0;
                      LCD_DATA=dat;
                      LCD_E=0;
                      _nop_();
                      LCD_E=1;
              #elif (LCD_INTERFACE==LCD_INTERFACE_8080PARALLEL)
              //      LCD_RD=1;
                      LCD_DATA=dat;
                      LCD_WR=0;
                      _nop_();
                      LCD_WR=1;
              #elif (LCD_INTERFACE==LCD_INTERFACE_SPI_SW)
 100   1              Lcd_write_byte(dat);
 101   1      #elif (LCD_INTERFACE==LCD_INTERFACE_SPI_HW)
                      SPIHW_Write(dat);
              #endif
 104   1              LCD_CS=1;
 105   1              EA=1;
 106   1      }
 107          
 108          /*********************************
 109          º¯ÊýÃû³Æ£ºLcd_set_pos
 110          ¹¦ÄÜ£ºLCDÉèÖÃ×ø±ê
 111          ÊäÈë£ºx×ø±ê£¬y×ø±ê
 112          Êä³ö£ºÎÞ
 113          ±¸×¢£ºx<=131£¬y<=7
 114          *********************************/
 115          void Lcd_set_pos(unsigned char x,unsigned char y)
C51 COMPILER V9.00   ST7567                                                                11/04/2021 23:39:15 PAGE 3   

 116          {
 117   1              if(lcd_seg_reverse)
 118   1                      x+=(132-LCD_WEIGHT);
 119   1              Lcd_write_cmd(LCD_Set_Page_Address+y);//Ò³µØÖ·
 120   1              Lcd_write_cmd(LCD_Set_Column_Address_lower_bit|x&0x0f);//µÍµØÖ·
 121   1              Lcd_write_cmd(LCD_Set_Column_Address_upper_bit|((x&0xf0)>>4));//¸ßµØÖ·
 122   1      }
 123          
 124          /*********************************
 125          º¯ÊýÃû³Æ£ºLcd_fill
 126          ¹¦ÄÜ£ºLCDÌî³ä
 127          ÊäÈë£ºxÆðÊ¼×ø±ê£¬yÆðÊ¼×ø±ê£¬³¤¶È£¬¿í¶È£¬Ìî³äÖµ
 128          Êä³ö£ºÎÞ
 129          ±¸×¢£º
 130          *********************************/
 131          void Lcd_fill(unsigned char x0,unsigned char y0,unsigned char h,unsigned char w,unsigned char dat)
 132          {
 133   1              unsigned char x;
 134   1              if(x0>131||h>132||y0>7||w>8)
 135   1                      return;
 136   1              h=h+x0-1;//¼ÆËã×ø±êÔöÁ¿ÖÕÖ¹Öµ
 137   1              w=w+y0-1;
 138   1              for(;y0<=w;y0++)
 139   1              {
 140   2                      Lcd_set_pos(x0,y0);
 141   2                      for(x=x0;x<=h;x++)
 142   2                              Lcd_write_dat(dat);
 143   2              }
 144   1      }
 145          
 146          /*********************************
 147          º¯ÊýÃû³Æ£ºLcd_cls
 148          ¹¦ÄÜ£ºLCDÇåÆÁ
 149          ÊäÈë£ºÎÞ
 150          Êä³ö£ºÎÞ
 151          ±¸×¢£º
 152          *********************************/
 153          void Lcd_cls()
 154          {
 155   1              Lcd_fill(0,0,132,8,0x00);
 156   1      }
 157          
 158          /*********************************
 159          º¯ÊýÃû³Æ£ºLcd_on
 160          ¹¦ÄÜ£ºLCD¿ªÆôÏÔÊ¾
 161          ÊäÈë£ºÎÞ
 162          Êä³ö£ºÎÞ
 163          ±¸×¢£º
 164          *********************************/
 165          void Lcd_on()
 166          {
 167   1              Lcd_write_cmd(LCD_Set_Display_ON_OFF|LCD_Display_ON);
 168   1      }
 169          
 170          /*********************************
 171          º¯ÊýÃû³Æ£ºLcd_off
 172          ¹¦ÄÜ£ºLCD¹Ø±ÕÏÔÊ¾
 173          ÊäÈë£ºÎÞ
 174          Êä³ö£ºÎÞ
 175          ±¸×¢£º
 176          *********************************/
 177          void Lcd_off()
C51 COMPILER V9.00   ST7567                                                                11/04/2021 23:39:15 PAGE 4   

 178          {
 179   1              Lcd_write_cmd(LCD_Set_Display_ON_OFF|LCD_Display_OFF);
 180   1      }
 181          
 182          /*********************************
 183          º¯ÊýÃû³Æ£ºLcd_set_seg_reverse
 184          ¹¦ÄÜ£ºLCDÉèÖÃ´¹Ö±¾µÏñ
 185          ÊäÈë£º0Õý³££¬1·´×ª
 186          Êä³ö£ºÎÞ
 187          ±¸×¢£ºÖ»¸Ä±äÊäÈë·½Ïò£¬²»¸Ä±äÉ¨Ãè·½Ïò
 188          *********************************/
 189          void Lcd_set_seg_reverse(bit on)
 190          {
 191   1              lcd_seg_reverse=on;
 192   1              Lcd_write_cmd(LCD_Set_SEG_Direction|(on ? LCD_SEG_Direction_reverse:LCD_SEG_Direction_normal));
 193   1      }
 194          
 195          /*********************************
 196          º¯ÊýÃû³Æ£ºLcd_set_com_reverse
 197          ¹¦ÄÜ£ºLCDÉèÖÃË®Æ½¾µÏñ
 198          ÊäÈë£º0Õý³££¬1·´×ª
 199          Êä³ö£ºÎÞ
 200          ±¸×¢£º
 201          *********************************/
 202          void Lcd_set_com_reverse(bit on)
 203          {
 204   1              lcd_com_reverse=on;
 205   1              Lcd_write_cmd(LCD_Set_COM_Direction|(on ? LCD_COM_Direction_reverse:LCD_COM_Direction_normal));
 206   1      }
 207          
 208          /*********************************
 209          º¯ÊýÃû³Æ£ºLcd_set_com_reverse
 210          ¹¦ÄÜ£ºLCDÉèÖÃ·´É«ÏÔÊ¾
 211          ÊäÈë£º0Õý³££¬1·´×ª
 212          Êä³ö£ºÎÞ
 213          ±¸×¢£º
 214          *********************************/
 215          void Lcd_set_black_reverse(bit on)
 216          {
 217   1              lcd_black_reverse=on;
 218   1              Lcd_write_cmd(LCD_Inverse_Display|(on ? LCD_Inverse_Display_inverse:LCD_Inverse_Display_normal));
 219   1      }
 220          
 221          /*********************************
 222          º¯ÊýÃû³Æ£ºLcd_set_contrast
 223          ¹¦ÄÜ£ºLCDÉèÖÃ¶Ô±È¶È
 224          ÊäÈë£º¶Ô±È¶È
 225          Êä³ö£ºÎÞ
 226          ±¸×¢£º
 227          *********************************/
 228          void Lcd_set_contrast(unsigned char contrast)
 229          {
 230   1              if(contrast>63)
 231   1                      return;
 232   1              lcd_contrast=contrast;
 233   1              Lcd_write_cmd(LCD_Set_EV);
 234   1              Lcd_write_cmd(contrast);
 235   1      }
 236          
 237          /*********************************
 238          º¯ÊýÃû³Æ£ºLcd_write_icon
 239          ¹¦ÄÜ£ºLCDÐ´Í¼±êRAM£¨µÚ9PAGE£©
C51 COMPILER V9.00   ST7567                                                                11/04/2021 23:39:15 PAGE 5   

 240          ÊäÈë£ºÍ¼±êÐòºÅ£¬ÏÔÊ¾/¹Ø±Õ
 241          Êä³ö£ºÎÞ
 242          ±¸×¢£º
 243          *********************************/
 244          #if LCD_ICON
 245          void Lcd_write_icon(unsigned char num,bit value)
 246          {
 247   1              if(num>131)
 248   1                      return;
 249   1              Lcd_set_pos(num,8);
 250   1              Lcd_write_dat(value);
 251   1      }
 252          
 253          /*********************************
 254          º¯ÊýÃû³Æ£ºLcd_clear_icon
 255          ¹¦ÄÜ£ºLCDÇå³ýËùÓÐÍ¼±ê
 256          ÊäÈë£ºÎÞ
 257          Êä³ö£ºÎÞ
 258          ±¸×¢£º
 259          *********************************/
 260          void Lcd_clear_icon()
 261          {
 262   1              unsigned char i;
 263   1              for(i=0;i<131;i++)
 264   1                      Lcd_write_icon(i,0);
 265   1      }
 266          #endif
 267          
 268          /*********************************
 269          º¯ÊýÃû³Æ£ºLcd_init
 270          ¹¦ÄÜ£ºLCD³õÊ¼»¯
 271          ÊäÈë£ºÎÞ
 272          Êä³ö£ºÎÞ
 273          ±¸×¢£º
 274          *********************************/
 275          void Lcd_init()
 276          {
 277   1              LCD_RST=0;//Ó²¸´Î»
 278   1              delayms(10);
 279   1              LCD_RST=1;
 280   1              delayms(10);
 281   1              
 282   1              Lcd_write_cmd(LCD_Reset);//Èí¸´Î»
 283   1              delayms(100); 
 284   1              Lcd_off();
 285   1              Lcd_write_cmd(LCD_Bias_Select|LCD_Bias_Select_1_9_bias);//Æ«Ñ¹±È
 286   1              Lcd_write_cmd(LCD_Regulation_Ratio|LCD_Rv0_RATIO);//ÉèÖÃV0µç×è±ÈÀý
 287   1              Lcd_set_seg_reverse(lcd_seg_reverse);//´¹Ö±¾µÏñ
 288   1              Lcd_set_com_reverse(lcd_com_reverse);//Ë®Æ½¾µÏñ
 289   1              Lcd_set_black_reverse(lcd_black_reverse);//·´ÏÔ
 290   1              Lcd_set_contrast(lcd_contrast);//Òº¾§Çý¶¯µçÑ¹µ÷Õû£¨¶Ô±È¶È£©
 291   1              Lcd_write_cmd(LCD_Set_All_Pixel_ON|LCD_All_Pixel_ON_Disable);//¹ØÈ«²¿ÏÔÊ¾
 292   1              Lcd_write_cmd(LCD_Set_Booster);Lcd_write_cmd(LCD_Set_Booster_2x_3x_4x);//ÉýÑ¹±È
 293   1              Lcd_write_cmd(LCD_Power_Control|LCD_Power_Control_Booster);//¿ªÉýÑ¹Æ÷
 294   1              delayms(10);
 295   1              Lcd_write_cmd(LCD_Power_Control|LCD_Power_Control_Booster|LCD_Power_Control_Vadj);//¿ªµçÑ¹µ÷ÕûÆ÷
 296   1              delayms(10);
 297   1              Lcd_write_cmd(LCD_Power_Control|LCD_Power_Control_Booster|LCD_Power_Control_Vadj|LCD_Power_Control_Follow
             -);//¿ªµçÑ¹¸úËæÆ÷
 298   1              delayms(2);
 299   1              Lcd_write_cmd(LCD_Set_Start_Line|LCD_START_LINE);//ÉèÖÃ0Ò³ÆðÊ¼ÐÐ
 300   1              Lcd_cls();//ÇåÆÁ
C51 COMPILER V9.00   ST7567                                                                11/04/2021 23:39:15 PAGE 6   

 301   1      #if LCD_ICON
 302   1              Lcd_clear_icon();
 303   1      #endif
 304   1              Lcd_set_pos(0,0);//×ø±ê¹éÎ»
 305   1              Lcd_on();//¿ªÏÔÊ¾
 306   1      }
 307          
 308          /*********************************
 309          º¯ÊýÃû³Æ£ºLcd_pic
 310          ¹¦ÄÜ£ºLCDÏÔÊ¾Í¼Æ¬
 311          ÊäÈë£ºxÆðÊ¼×ø±ê£¬yÆðÊ¼×ø±ê£¬³¤¶È£¬¿í¶È£¬Í¼Æ¬Êý¾Ý£¬·´ÏÔ
 312          Êä³ö£ºÎÞ
 313          ±¸×¢£º
 314          *********************************/
 315          void Lcd_pic(unsigned char x0,unsigned char y0,unsigned char h,unsigned char w,unsigned char *pic,bit b)
 316          {
 317   1              unsigned char x;
 318   1              if(x0>131||h>132||y0>7||w>8)
 319   1                      return;
 320   1              h=h+x0-1;//¼ÆËã×ø±êÔöÁ¿ÖÕÖ¹Öµ
 321   1              w=w+y0-1;
 322   1              for(;y0<=w;y0++)
 323   1              {
 324   2                      Lcd_set_pos(x0,y0);
 325   2                      for(x=x0;x<=h;x++)
 326   2                              Lcd_write_dat(b ? ~*pic++:*pic++);
 327   2              }
 328   1      }
 329          
 330          /*********************************
 331          º¯ÊýÃû³Æ£ºLcd_P8x16char
 332          ¹¦ÄÜ£ºLCDÏÔÊ¾Ò»¸ö8x16×Ö·û
 333          ÊäÈë£ºx×ø±ê£¬y×ø±ê£¬×Ö·û£¬·´ÏÔ
 334          Êä³ö£ºÎÞ
 335          ±¸×¢£º
 336          *********************************/
 337          #if (LCD_ASCLL8X16||LCD_CH16X16)
 338          #include "ASC8X16.h"
 339          void Lcd_P8x16char(unsigned char x,unsigned char y,unsigned char chr,bit b)
 340          {
 341   1              if(x>131||y>7||chr>127)
 342   1                      return;
 343   1              Lcd_pic(x,y,8,2,&ASC8X16[(chr-32)*16],b);
 344   1      }
 345          
 346          /*********************************
 347          º¯ÊýÃû³Æ£ºLcd_P8x16Str
 348          ¹¦ÄÜ£ºLCDÏÔÊ¾8x16×Ö·û´®
 349          ÊäÈë£ºx×ø±ê£¬y×ø±ê£¬×Ö·û´®£¬·´ÏÔ
 350          Êä³ö£ºÎÞ
 351          ±¸×¢£º
 352          *********************************/
 353          void Lcd_P8x16Str(unsigned char x,unsigned char y,unsigned char *str,bit b)
 354          {
 355   1              while(*str!='\0')
 356   1              {
 357   2                      Lcd_P8x16char(x,y,*str++,b);
 358   2                      x+=8;
 359   2              }
 360   1      }
 361          #endif
 362          
C51 COMPILER V9.00   ST7567                                                                11/04/2021 23:39:15 PAGE 7   

 363          /*********************************
 364          º¯ÊýÃû³Æ£ºLcd_P5x7char
 365          ¹¦ÄÜ£ºLCDÏÔÊ¾Ò»¸ö5x7×Ö·û
 366          ÊäÈë£ºx×ø±ê£¬y×ø±ê£¬×Ö·û£¬·´ÏÔ
 367          Êä³ö£ºÎÞ
 368          ±¸×¢£º
 369          *********************************/
 370          #if LCD_ASCLL5X7
 371          #include "ASC5X7.h"
 372          void Lcd_P5x7char(unsigned char x,unsigned char y,unsigned char chr,bit b)
 373          {
 374   1              if(x>131||y>7||chr>127)
 375   1                      return;
 376   1              Lcd_pic(x,y,5,1,&ASC5X7[(chr-32)*5],b);
 377   1      }
 378          
 379          /*********************************
 380          º¯ÊýÃû³Æ£ºLcd_P5x7Str
 381          ¹¦ÄÜ£ºLCDÏÔÊ¾5x7×Ö·û´®
 382          ÊäÈë£ºx×ø±ê£¬y×ø±ê£¬×Ö·û´®£¬·´ÏÔ
 383          Êä³ö£ºÎÞ
 384          ±¸×¢£º
 385          *********************************/
 386          void Lcd_P5x7Str(unsigned char x,unsigned char y,unsigned char *str,bit b)
 387          {
 388   1              while(*str!='\0')
 389   1              {
 390   2                      Lcd_P5x7char(x,y,*str++,b);
 391   2                      x+=6;
 392   2              }
 393   1      }
 394          #endif
 395          
 396          /*********************************
 397          º¯ÊýÃû³Æ£ºLcd_P16x16Ch
 398          ¹¦ÄÜ£ºLCDÏÔÊ¾ÖÐÎÄºÍ8x16×Ö·û´®
 399          ÊäÈë£ºx×ø±ê£¬y×ø±ê£¬×Ö·û´®£¬·´ÏÔ
 400          Êä³ö£ºÎÞ
 401          ±¸×¢£º
 402          *********************************/
 403          #if LCD_CH16X16
 404          #include "CH16X16.h"
 405          const unsigned int CH_NUM=(sizeof GB_16)/34;//¼ÆËã×Ö¿â×ÖÊý
 406          
 407          void Lcd_P16x16Ch(unsigned char x,unsigned char y,unsigned char *cnstr,bit b)
 408          {
 409   1              unsigned int word;
 410   1              if(x>131||y>7)
 411   1                      return;
 412   1              while(*cnstr!='\0')
 413   1              {
 414   2                      if(*cnstr>=0x81)//ÎÄ×ÖÎªºº×Ö
 415   2                      {
 416   3                              for(word=0;word<=CH_NUM;word++)//ËÑË÷×Ö¿â
 417   3                                      if((GB_16[word].Index[0]==*cnstr)&&(GB_16[word].Index[1]==*(cnstr+1)))
 418   3                                              Lcd_pic(x,y,16,2,GB_16[word].Msk,b);
 419   3                              x+=16;
 420   3                              cnstr+=2;
 421   3                      }
 422   2                      else//ÎÄ×ÖÎªASCLL×Ö·û
 423   2                      {
 424   3                              Lcd_P8x16char(x,y,*cnstr,b);
C51 COMPILER V9.00   ST7567                                                                11/04/2021 23:39:15 PAGE 8   

 425   3                              cnstr++;
 426   3                              x+=8;
 427   3                      }
 428   2              }
 429   1      }
 430          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1024    ----
   CONSTANT SIZE    =   1963    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3      33
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3      10
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
